plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}



group = 'az.kapitalbank'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.0")
    serenityCoreVersion = '3.0.5'
    serenityCucumberVersion = '2.6.0'
    assertJVersion = '3.8.0'
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-consul-config:3.1.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-vault-config:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-aop:2.6.3'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.3'

    testImplementation "net.serenity-bdd:serenity-core:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-cucumber6:${serenityCucumberVersion}",
            "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-junit:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-spring:${serenityCoreVersion}",
            "org.junit.platform:junit-platform-launcher:1.8.2",
            "org.junit.jupiter:junit-jupiter-engine:5.8.2",
            "org.junit.vintage:junit-vintage-engine:5.8.2"

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}

gradle.startParameter.continueOnFailure = true
tasks.named('test') {
    useJUnitPlatform()
}
